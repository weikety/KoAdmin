参考开源项目
https://gitee.com/feiyit/fytapi.mui

【第一步】
配置SwaggerGen
在项目中右击,增加XML生成
参考如下代码
builder.Services.AddSwaggerGen(options =>
{
    // 配置相关组
    options.SwaggerDoc("v1", new Microsoft.OpenApi.Models.OpenApiInfo { Title = "天气", Version = "v1" });
    options.SwaggerDoc("v2", new Microsoft.OpenApi.Models.OpenApiInfo { Title = "用户", Version = "v1" });
    // 增加项目xml注释显示，如果有多个类库要显示，可以继续增加
    options.IncludeXmlComments(Path.Combine(AppContext.BaseDirectory, "TestApi.xml"),true);
    // [示例]-增加Model xml显示
    options.IncludeXmlComments(Path.Combine(AppContext.BaseDirectory, "TestApi.Model.xml"),true);
});

// UI 和 Swagger配置一样一样滴
app.UseFytApiUI(c =>
{
    c.SwaggerEndpoint("/swagger/v1/swagger.json", "天气","v1");
    c.SwaggerEndpoint("/swagger/v2/swagger.json", "用户","v2");
});
app.UseStaticFiles();


【第二步】
启用UseSwagger
// 默认 swagger 不要删除
app.UseSwagger();
// 兼容 默认 SwaggerUI  可保留可删除
app.UseSwaggerUI();
// [增加]  配置UI HTTP请求管道，及相关中间件处理 ，这里配置和Swagger默认配置一样
app.UseFytApiUI(c =>
{
   c.SwaggerEndpoint("/swagger/v1/swagger.json", "devault","v1");
});
app.UseStaticFiles();


【请求地址】
/apiui/index.html
